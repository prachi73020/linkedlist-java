public class Main 
{
    public static class Node 
    {
        int data;
        Node next;
    }
    public static class LinkedList 
    {
        Node head;
        Node tail;
        int size;
        
        void AddFirst(int val)
        {
            Node temp=new Node();
            temp.data=val;
            temp.next=head;
            head=temp;
            if(size==0)
            {
                tail=temp;
            }
            size++;
        }
        
        void display()
        {
            Node temp=head;
            while(temp!=null)
            {
                System.out.print(temp.data+"->");
                temp=temp.next;
            }
        }
        int getFirst()
        {
            if(size==0)
            {
                System.out.println("List is empty");
                return -1;
            }
            else
            {
            return head.data;
            }
        }
        void RemoveFirst()
        {
            if(size==0)
            {
                System.out.println("List is empty");
            }
            if(size==1)
            {
                head=tail=null;
                size=0;
            }
            else{
                head=head.next;
                size--;
            }
        }
        int size()
        {
            return size();
        }
        void push(int val)
        {
            AddFirst(val);
        }
        void pop()
        {
            if(size==0)
            {
                System.out.println("stack is underflow");
                //return -1;
            }
            else
            {
                RemoveFirst();
            }
        }
        int top()
        {
            if(size==0)
            {
                System.out.println("stack overflow");
                return -1;
            }
            else{
                return getFirst();
            }
        }
    }
    public static void main(String []args)
    {
        LinkedList list=new LinkedList();
        list.AddFirst(1);
        list.AddFirst(2);
        list.AddFirst(3);
        list.AddFirst(4);
        list.AddFirst(5);
      
      list.push(6);
       list.pop();
       //System.out.println("list is"+list.getFirst());
        System.out.println("list is"+list.top());
        //l1.RemoveFirst();
        list.display();
       
        
    }
}
