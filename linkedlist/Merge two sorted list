import java.util.*;
public class Main 
{
    public static class Node
    {
        int data;
        Node next;
    }
    public static class LinkedList
    {
        Node head;
        Node tail;
        int size;
        
        void addlast(int val)
        {
            Node temp=new Node();
            temp.data=val;
            temp.next=null;
            if(size==0)
            {
                head=tail=temp;
            }
            else
            {
                tail.next=temp;
                tail=temp;
            }
            size++;
        }
        void display()
        {
            Node temp=head;
            while(temp!=null)
            {
                System.out.print(temp.data+"->");
                temp=temp.next;
            }
             System.out.println();
        }
       
    }
    public static LinkedList mergetwosortedlinkedlist(LinkedList l1,LinkedList l2)
{
    Node one=l1.head;
    Node two=l2.head;
    LinkedList res=new LinkedList();
    while(one!=null&&two!=null)
    {
        if(one.data<two.data)
        {
            res.addlast(one.data);
            one=one.next;
        }
        else
        {
            res.addlast(two.data);
            two=two.next;
        }
    }
    while(one!=null)
    {
        res.addlast(one.data);
        one=one.next;
    }
    
    while(two!=null)
    {
        res.addlast(two.data);
        two=two.next;
    }
    return res;
 
}
public static void main(String []args)
        {
            LinkedList l1=new LinkedList();
             l1.addlast(1);
             l1.addlast(3);
             l1.addlast(5);
             l1.addlast(7);
             l1.addlast(9);
            l1.display();
        
             LinkedList l2=new LinkedList();
             l2.addlast(2);
             l2.addlast(4);
             l2.addlast(6);
             l2.addlast(8);
             l2.addlast(10);
            l2.display();
            
           LinkedList l= mergetwosortedlinkedlist(l1,l2);
           l.display();
        }
        
        
}
