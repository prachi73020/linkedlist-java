import java.util.*;
public class Main
{

public static class Node {
    int data;
    Node next;
}
    public static class LinkedList
    {
        Node head;
        Node tail;
        int size;
        
        void addLast(int val)
        {
            Node temp=new Node();
            temp.data=val;
            temp.next=null;
            if(size==0)
            {
            head=temp;
            tail=temp;
            }
            else
            {
            tail.next=temp;
            tail=temp;
            }
        size++;
        }
        int size()
        {
            return size;
        }
        public void display()
        {
            Node temp=head;
            while(temp!=null)
            {
                System.out.println(temp.data+" ");
                temp=temp.next;
            }
            System.out.println("end");
        }
        public void removelist()
        {
            if(size==0)
            {
                System.out.println("this is empty");
            }
            else if(size==1)
            {
                head=tail=null;
            }
            else{
                head=head.next;
                size--;
            }
        }
        public int getfirst()
        {
            if(size==0)
            {
                System.out.println("list is empty");
                return -1;
            }
            return head.data;
        }
        public int getlast()
        {
            if(size==0)
            {
                System.out.println("list is empty");
                return -1;
            }
            return tail.data;
        }
        public int getAt(int idx)
        {
           if(size==0)
            {
                System.out.println("list is empty");
                return -1;
            }
            else if(idx<0||idx>=size)
            {
            System.out.println("invalid argument");
            return -1;
            }
            else
            {
                Node temp=head;
                for(int i=0;i<idx;i++)
                {
                temp=temp.next;
                }
                  return temp.data;
            }
          
        }
        void addfirst(int val)
        {
            Node temp=new Node();
            temp.data=val;
            temp.next=head;
            head=temp;
            if(size==0)
            {
                tail=temp;
            }
            size++;
        }
    
    }    
    public static void main(String[] args)
    {
        LinkedList list=new LinkedList();
     
    list.addfirst(1);
    list.addfirst(2);
    list.addfirst(3);
    list.addfirst(4);
    list.addfirst(5);
      
        list.display();
       
    }
}
